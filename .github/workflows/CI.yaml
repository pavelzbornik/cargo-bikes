name: CI
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read
on:
  pull_request:
    branches:
      - main
      - dev
    paths:
      - "scripts/**"
      - "tests/**"
      - "pyproject.toml"
  push:
    branches:
      - main
      - dev
    paths:
      - "scripts/**"
      - "tests/**"
      - "pyproject.toml"
  workflow_dispatch:
  workflow_call:
jobs:
  lint:
    name: Lint and Format
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      pull-requests: write # Needed for PR failure comment
    steps:
      - name: Checkout code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Common setup
        uses: ./.github/actions/setup
        with:
          python-version: "3.11"
      - name: Run full pre-commit validation
        uses: pre-commit/action@1b06ec171f2f6faa71ed760c4042bd969e4f8b43
      - name: Comment on PR if lint job fails
        if: failure() && github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@e4a76dd2b0a3c2027c3fd84147a67c22ee4c90fa
        with:
          message: |
            ## :x: CI Job Failed
            **Job:** `Lint and Format`
            **Error:** Code formatting or linting checks failed
            **Run ID:** [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            ### :point_right: Next Steps
            - Review the [full logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for detailed error information
            - Fix the issues and push new commits to update this PR
            - The CI will automatically re-run on new commits

            ---
            <sub>This comment was automatically generated by CI failure notification</sub>
          mode: upsert
          comment-tag: ci-lint-failure
          reactions: eyes, x
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: lint
    strategy:
      matrix:
        python-version: ["3.11"]
    permissions:
      contents: read
      pull-requests: write # Needed for PR failure comment
    steps:
      - name: Checkout code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
        with:
          fetch-depth: 0 # Needed for SonarQube analysis
      - name: Common setup
        uses: ./.github/actions/setup
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run tests with coverage
        run: uv run pytest --junitxml=pytest-report.xml --cov=scripts --cov-report=xml --cov-report=term --cov-fail-under=65
      - name: Upload test report
        uses: actions/upload-artifact@2848b2cda0e5190984587ec6bb1f36730ca78d50
        with:
          name: test-report-${{ matrix.python-version }}
          path: pytest-report.xml
      - name: Upload coverage report
        uses: actions/upload-artifact@2848b2cda0e5190984587ec6bb1f36730ca78d50
        with:
          name: coverage-report-${{ matrix.python-version }}
          path: coverage.xml
      - name: Comment on PR if test job fails
        if: failure() && github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@e4a76dd2b0a3c2027c3fd84147a67c22ee4c90fa
        with:
          message: |
            ## :x: CI Job Failed
            **Job:** `Test`
            **Error:** Tests failed or coverage threshold not met
            **Run ID:** [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            ### :point_right: Next Steps
            - Review the [full logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for detailed error information
            - Fix the issues and push new commits to update this PR
            - The CI will automatically re-run on new commits

            ---
            <sub>This comment was automatically generated by CI failure notification</sub>
          mode: upsert
          comment-tag: ci-test-failure
          reactions: eyes, x
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    timeout-minutes: 10
    permissions:
      contents: read
      pull-requests: write # Needed for PR failure comment
    steps:
      - name: Checkout code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      - name: Dependency Review
        uses: actions/dependency-review-action@07b91577a360213440b7d4bc514338cb37ce61a0
        with:
          fail-on-severity: moderate
      - name: Comment on PR if dependency review fails
        if: failure() && github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@e4a76dd2b0a3c2027c3fd84147a67c22ee4c90fa
        with:
          message: |
            ## :x: CI Job Failed
            **Job:** `Dependency Review`
            **Error:** Vulnerable dependencies detected
            **Run ID:** [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            ### :point_right: Next Steps
            - Review the [full logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for detailed error information
            - Update vulnerable dependencies to secure versions
            - Push new commits to update this PR
            - The CI will automatically re-run on new commits

            ---
            <sub>This comment was automatically generated by CI failure notification</sub>
          mode: upsert
          comment-tag: ci-dependency-review-failure
          reactions: eyes, x
  dependabot-auto-merge:
    name: Auto-merge Dependabot PR
    runs-on: ubuntu-latest
    needs: [test, dependency-review]
    if: github.event_name == 'pull_request' && github.event.pull_request.user.login == 'dependabot[bot]'
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@5a70a1d133aebc31503dc07fb19f294cf18ff31c
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Merge the PR
        run: gh pr merge "$PR_URL" --merge
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
